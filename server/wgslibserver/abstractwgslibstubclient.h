/**
 * This file is generated by jsonrpcstub, DO NOT CHANGE IT MANUALLY!
 */

#ifndef JSONRPC_CPP_STUB_ABSTRACTWGSLIBSTUBCLIENT_H_
#define JSONRPC_CPP_STUB_ABSTRACTWGSLIBSTUBCLIENT_H_

#include <jsonrpccpp/client.h>

class AbstractWGSLibStubClient : public jsonrpc::Client
{
    public:
        AbstractWGSLibStubClient(jsonrpc::AbstractClientConnector &conn) : jsonrpc::Client(conn) {}

        Json::Value compute_variograms(const int& X_prop, const int& Y_prop, const int& Z_prop, const Json::Value& dimensions, const Json::Value& directions, const std::string& grid_name, const int& num_lags, const Json::Value& props, const Json::Value& props_name, const Json::Value& props_selected) throw (jsonrpc::JsonRpcException)
        {
            Json::Value p;
            p.append(X_prop);
            p.append(Y_prop);
            p.append(Z_prop);
            p.append(dimensions);
            p.append(directions);
            p.append(grid_name);
            p.append(num_lags);
            p.append(props);
            p.append(props_name);
            p.append(props_selected);
            Json::Value result = this->CallMethod("compute_variograms",p);
            if (result.isArray())
                return result;
            else
                throw jsonrpc::JsonRpcException(jsonrpc::Errors::ERROR_CLIENT_INVALID_RESPONSE, result.toStyledString());
        }
        void notifyServer() throw (jsonrpc::JsonRpcException)
        {
            Json::Value p;
            p = Json::nullValue;
            this->CallNotification("notifyServer",p);
        }
};

#endif //JSONRPC_CPP_ABSTRACTWGSLIBSTUBCLIENT_H_
