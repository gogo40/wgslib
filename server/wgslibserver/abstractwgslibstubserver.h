/**
 * This file is generated by jsonrpcstub, DO NOT CHANGE IT MANUALLY!
 */

#ifndef JSONRPC_CPP_STUB_ABSTRACTWGSLIBSTUBSERVER_H_
#define JSONRPC_CPP_STUB_ABSTRACTWGSLIBSTUBSERVER_H_

#include <jsonrpccpp/server.h>

class AbstractWGSLibStubServer : public jsonrpc::AbstractServer<AbstractWGSLibStubServer>
{
    public:
        AbstractWGSLibStubServer(jsonrpc::AbstractServerConnector &conn) : jsonrpc::AbstractServer<AbstractWGSLibStubServer>(conn)
        {
            this->bindAndAddMethod(new jsonrpc::Procedure("compute_variograms", jsonrpc::PARAMS_BY_POSITION, jsonrpc::JSON_ARRAY, "X_prop",jsonrpc::JSON_INTEGER,"Y_prop",jsonrpc::JSON_INTEGER,"Z_prop",jsonrpc::JSON_INTEGER,"dimensions",jsonrpc::JSON_ARRAY,"directions",jsonrpc::JSON_ARRAY,"grid_name",jsonrpc::JSON_STRING,"num_lags",jsonrpc::JSON_INTEGER,"props",jsonrpc::JSON_ARRAY,"props_name",jsonrpc::JSON_ARRAY,"props_selected",jsonrpc::JSON_ARRAY, NULL), &AbstractWGSLibStubServer::compute_variogramsI);
            this->bindAndAddNotification(new jsonrpc::Procedure("notifyServer", jsonrpc::PARAMS_BY_POSITION,  NULL), &AbstractWGSLibStubServer::notifyServerI);
        }

        inline virtual void compute_variogramsI(const Json::Value &request, Json::Value &response)
        {
            response = this->compute_variograms(request[0u].asInt(), request[1u].asInt(), request[2u].asInt(), request[3u], request[4u], request[5u].asString(), request[6u].asInt(), request[7u], request[8u], request[9u]);
        }
        inline virtual void notifyServerI(const Json::Value &request)
        {
            this->notifyServer();
        }
        virtual Json::Value compute_variograms(const int& X_prop, const int& Y_prop, const int& Z_prop, const Json::Value& dimensions, const Json::Value& directions, const std::string& grid_name, const int& num_lags, const Json::Value& props, const Json::Value& props_name, const Json::Value& props_selected) = 0;
        virtual void notifyServer() = 0;
};

#endif //JSONRPC_CPP_ABSTRACTWGSLIBSTUBSERVER_H_
