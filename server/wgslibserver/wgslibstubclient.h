/**
 * This file is generated by jsonrpcstub, DO NOT CHANGE IT MANUALLY!
 */

#ifndef JSONRPC_CPP_STUB_WGSLIBSTUBCLIENT_H_
#define JSONRPC_CPP_STUB_WGSLIBSTUBCLIENT_H_

#include <jsonrpccpp/client.h>

class WGSLibStubClient : public jsonrpc::Client
{
    public:
        WGSLibStubClient(jsonrpc::IClientConnector &conn) : jsonrpc::Client(conn) {}

        Json::Value compute_variograms(int X_prop, int Y_prop, int Z_prop, const Json::Value& dimensions, const Json::Value& directions, const std::string& grid_name, int num_lags, const Json::Value& props, const Json::Value& props_name, const Json::Value& props_selected) throw (jsonrpc::JsonRpcException)
        {
            Json::Value p;
            p["X_prop"] = X_prop;
            p["Y_prop"] = Y_prop;
            p["Z_prop"] = Z_prop;
            p["dimensions"] = dimensions;
            p["directions"] = directions;
            p["grid_name"] = grid_name;
            p["num_lags"] = num_lags;
            p["props"] = props;
            p["props_name"] = props_name;
            p["props_selected"] = props_selected;
            Json::Value result = this->CallMethod("compute_variograms",p);
            if (result.isArray())
                return result;
            else
                throw jsonrpc::JsonRpcException(jsonrpc::Errors::ERROR_CLIENT_INVALID_RESPONSE, result.toStyledString());
        }
        void notifyServer() throw (jsonrpc::JsonRpcException)
        {
            Json::Value p;
            p = Json::nullValue;
            this->CallNotification("notifyServer",p);
        }
};

#endif //JSONRPC_CPP_STUB_WGSLIBSTUBCLIENT_H_
